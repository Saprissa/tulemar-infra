user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript
               application/javascript application/xml+rss
               application/json application/font-woff2;

    # Environment variable mapping for SSL enabled flag
    # Since nginx doesn't automatically read env vars, we'll use the compose env var
    # The SSL_ENABLED environment variable from Docker Compose will be used directly in conditionals

    # Rate limiting zones (defined globally)
    limit_req_zone $binary_remote_addr zone=grocery_login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=grocery_api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=vip_login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=vip_api:10m rate=10r/s;

    # Upstreams with health monitoring
    upstream grocery_backend {
        server grocery-web:8000 max_fails=3 fail_timeout=30s;
    }

    upstream vip_backend {
        server vipsite-web:8001 max_fails=3 fail_timeout=30s;
    }

    # Default server to handle invalid/missing Host headers (HTTP only)
    server {
        listen 80 default_server;
        server_name _;

        # Return 444 (connection close) for all requests to invalid hosts
        return 444;

        # Log these attempts for monitoring
        access_log /var/log/nginx/invalid_requests.log main;
    }

    # Include site configurations
    include /etc/nginx/conf.d/*.conf;
}